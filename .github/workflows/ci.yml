name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      PIP_CACHE_DIR: .pip_cache
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set custom pip cache dir
        run: mkdir -p ${{ env.PIP_CACHE_DIR }}
        shell: bash

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install project with dev dependencies
        run: pip install --cache-dir ${{ env.PIP_CACHE_DIR }} .[dev]

      - name: Run mypy (type checks)
        run: mypy mpr_photo_editor tests

      - name: Run ruff (lint checks)
        run: ruff check mpr_photo_editor tests

      - name: Run tests
        run: pytest
